import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

df = pd.read_csv('Boston.csv')

df.corr()['MEDV'].sort_values()

X = df.loc[:, ['LSTAT', 'PTRATIO', 'RM']].values
Y = df.loc[:, ['MEDV']].values

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.25, random_state = 10)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

scaler.fit(x_train)

x_train = scaler.transform(x_train)
x_test = scaler.transform(x_test)

from keras.models import Sequential
from keras.layers import Dense
model = Sequential()

model.add(Dense(128, input_shape = (3, ), activation = 'relu', name = 'input'))
model.add(Dense(64, activation = 'relu', name = 'layer_1'))
model.add(Dense(1, activation = 'linear', name = 'output'))
model.compile(optimizer = 'adam', loss = 'mse', metrics = ['mae'])

model.fit(x_train, y_train, epochs = 100, validation_split = 0.05)

output = model.evaluate(x_test, y_test)

y_pred = model.predict(x_test)

plt.scatter(y_test, y_pred)
plt.xlabel("Actual MEDV")
plt.ylabel("Predicted MEDV")
plt.title("Actual vs Predicted MEDV")
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'r--')
plt.show()
